class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
    int m = matrix.size();      // 矩阵的行数
    int n = matrix[0].size();   // 矩阵的列数
    bool row_zero = false, col_zero = false;
    
    // 检查第一列是否有 0
    for (int i = 0; i < m; ++i) {
        if (matrix[i][0] == 0) {
            col_zero = true;
            break;
        }
    }

    // 检查第一行是否有 0
    for (int j = 0; j < n; ++j) {
        if (matrix[0][j] == 0) {
            row_zero = true;
            break;
        }
    }

    // 使用第一行和第一列作为标记，标记其他行列是否需要置 0
    for (int i = 1; i < m; ++i) {
        for (int j = 1; j < n; ++j) {
            if (matrix[i][j] == 0) {
                matrix[i][0] = 0;
                matrix[0][j] = 0;
            }
        }
    }

    // 根据第一列的标记，将相应的行置为 0
    for (int i = 1; i < m; ++i) {
        if (matrix[i][0] == 0) {
            for (int j = 1; j < n; ++j) {
                matrix[i][j] = 0;
            }
        }
    }

    // 根据第一行的标记，将相应的列置为 0
    for (int j = 1; j < n; ++j) {
        if (matrix[0][j] == 0) {
            for (int i = 1; i < m; ++i) {
                matrix[i][j] = 0;
            }
        }
    }

    // 如果第一列需要置 0
    if (col_zero) {
        for (int i = 0; i < m; ++i) {
            matrix[i][0] = 0;
        }
    }

    // 如果第一行需要置 0
    if (row_zero) {
        for (int j = 0; j < n; ++j) {
            matrix[0][j] = 0;
        }
    }
}
};
