/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
// 中序遍历的递归实现
void inOrder(TreeNode* root, int k, int& count, int& result) {
    if (!root) return;

    // 遍历左子树
    inOrder(root->left, k, count, result);
    
    // 访问当前节点
    count++;
    if (count == k) {
        result = root->val;
        return;
    }

    // 遍历右子树
    inOrder(root->right, k, count, result);
}

// 查找第k小的元素
int kthSmallest(TreeNode* root, int k) {
    int count = 0;
    int result = -1;
    inOrder(root, k, count, result);
    return result;
}
};
